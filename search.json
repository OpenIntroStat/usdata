[{"path":[]},{"path":"https://openintrostat.github.io/usdata/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://openintrostat.github.io/usdata/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://openintrostat.github.io/usdata/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://openintrostat.github.io/usdata/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://openintrostat.github.io/usdata/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://openintrostat.github.io/usdata/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://openintrostat.github.io/usdata/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://openintrostat.github.io/usdata/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://openintrostat.github.io/usdata/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://openintrostat.github.io/usdata/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://openintrostat.github.io/usdata/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://openintrostat.github.io/usdata/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://openintrostat.github.io/usdata/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/usdata/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://openintrostat.github.io/usdata/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://openintrostat.github.io/usdata/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://openintrostat.github.io/usdata/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://openintrostat.github.io/usdata/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://openintrostat.github.io/usdata/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://openintrostat.github.io/usdata/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://openintrostat.github.io/usdata/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://openintrostat.github.io/usdata/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://openintrostat.github.io/usdata/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://openintrostat.github.io/usdata/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://openintrostat.github.io/usdata/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://openintrostat.github.io/usdata/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://openintrostat.github.io/usdata/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://openintrostat.github.io/usdata/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://openintrostat.github.io/usdata/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://openintrostat.github.io/usdata/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://openintrostat.github.io/usdata/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://openintrostat.github.io/usdata/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2020 Mine Çetinkaya-Rundel  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. usdata Copyright (C) 2020 Mine Çetinkaya-Rundel This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://openintrostat.github.io/usdata/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mine Çetinkaya-Rundel. Author, maintainer. David Diez. Author. Leah Dorazio. Author.","code":""},{"path":"https://openintrostat.github.io/usdata/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Çetinkaya-Rundel M, Diez D, Dorazio L (2024). usdata: Data States Counties United States. R package version 0.3.1, https://openintrostat.github.io/usdata/, https://github.com/OpenIntroStat/usdata.","code":"@Manual{,   title = {usdata: Data on the States and Counties of the United States},   author = {Mine Çetinkaya-Rundel and David Diez and Leah Dorazio},   year = {2024},   note = {R package version 0.3.1, https://openintrostat.github.io/usdata/},   url = {https://github.com/OpenIntroStat/usdata}, }"},{"path":"https://openintrostat.github.io/usdata/index.html","id":"usdata-","dir":"","previous_headings":"","what":"Data sets and supplemental functions from OpenIntro textbooks and labs","title":"Data sets and supplemental functions from OpenIntro textbooks and labs","text":"package contains demographic data United States county state levels. data span multiple years. Sources include US Census, American Community Survey, data distributed Bureau Labor Statistics, etc.","code":""},{"path":"https://openintrostat.github.io/usdata/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Data sets and supplemental functions from OpenIntro textbooks and labs","text":"can install package CRAN : Additionally, can install development version usdata GitHub :","code":"install.packages(\"usdata\") #install.packages(\"devtools\") library(devtools) install_github(\"OpenIntroStat/usdata\")"},{"path":"https://openintrostat.github.io/usdata/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Data sets and supplemental functions from OpenIntro textbooks and labs","text":"datasets package can used teaching context data visualization data manipulation exercises well modeling. Since data spans multiple years ’s also possible use data explore trends US time.","code":""},{"path":"https://openintrostat.github.io/usdata/index.html","id":"usdata-and-openintro","dir":"","previous_headings":"","what":"usdata and openintro","title":"Data sets and supplemental functions from OpenIntro textbooks and labs","text":"datasets package used OpenIntro textbooks resources. datasets originally lived openintro package, openintro 2.0.0. motivation extracting datasets openintro package create new package can continue add data US state county levels. looking seamless experience OpenIntro resources, note contents package loaded along openintro package well, can run library(openintro) use datasets usdata.","code":""},{"path":"https://openintrostat.github.io/usdata/index.html","id":"questions-bugs-feature-requests","dir":"","previous_headings":"","what":"Questions, bugs, feature requests","title":"Data sets and supplemental functions from OpenIntro textbooks and labs","text":"can file issue get help, report bug, make feature request. filing issue get help report bug, please make minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! See additional reprex pointers. opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repository, open closed.","code":""},{"path":"https://openintrostat.github.io/usdata/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Data sets and supplemental functions from OpenIntro textbooks and labs","text":"Please note usdata project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/abbr2state.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert state abbreviations to names — abbr2state","title":"Convert state abbreviations to names — abbr2state","text":"Two utility functions. One converts state names state abbreviations, second opposite.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/abbr2state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert state abbreviations to names — abbr2state","text":"","code":"abbr2state(abbr)"},{"path":"https://openintrostat.github.io/usdata/reference/abbr2state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert state abbreviations to names — abbr2state","text":"abbr vector state abbreviation.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/abbr2state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert state abbreviations to names — abbr2state","text":"Returns vector length corresponding state names abbreviations.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/usdata/reference/abbr2state.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert state abbreviations to names — abbr2state","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/usdata/reference/abbr2state.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert state abbreviations to names — abbr2state","text":"","code":"abbr2state(\"MN\") #> [1] \"Minnesota\""},{"path":"https://openintrostat.github.io/usdata/reference/airline_delay.html","id":null,"dir":"Reference","previous_headings":"","what":"Airline Delays for December 2019 and 2020. — airline_delay","title":"Airline Delays for December 2019 and 2020. — airline_delay","text":"Summary Data counts airline per carrier per US City.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/airline_delay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Airline Delays for December 2019 and 2020. — airline_delay","text":"","code":"airline_delay"},{"path":"https://openintrostat.github.io/usdata/reference/airline_delay.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Airline Delays for December 2019 and 2020. — airline_delay","text":"data frame 3351 rows 21 variables. year Year data collected month Numeric representation month carrier Carrier. carrier_name Carrier Name. airport Airport code. airport_name Name airport. arr_flights Number flights arriving airport arr_del15 Number flights 15 minutes late carrier_ct Number flights delayed due air carrier. (e.g. crew) weather_ct Number flights due weather. nas_ct Number flights delayed due National Aviation System (e.g. heavy air traffic). security_ct Number flights canceled due security breach. late_aircraft_ct Number flights delayed result another flight aircraft delayed arr_cancelled Number cancelled flights arr_diverted Number flights diverted arr_delay Total time (minutes) delayed flight. carrier_delay Total time (minutes) delay due air carrier weather_delay Total time (minutes) delay due inclement weather. nas_delay Total time (minutes) delay due National Aviation System. security_delay Total time (minutes) delay result security issue . late_aircraft_delay Total time (minutes) delay flights result previous flight airplane late.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/airline_delay.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Airline Delays for December 2019 and 2020. — airline_delay","text":"Bureau Transportation Statistics","code":""},{"path":"https://openintrostat.github.io/usdata/reference/airline_delay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Airline Delays for December 2019 and 2020. — airline_delay","text":"","code":"library(ggplot2) ggplot(airline_delay, aes(arr_flights, arr_del15, color = as.factor(year))) +   geom_point(alpha = 0.3) +   labs(     x = \"Total Number of inbound flights\",     y = \"Number of flights delayed by more than 15 mins\",     title = \"Inbound vs delayed flights by year\",     color = \"Year\"   ) #> Warning: Removed 8 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://openintrostat.github.io/usdata/reference/county.html","id":null,"dir":"Reference","previous_headings":"","what":"United States Counties — county","title":"United States Counties — county","text":"Data 3142 counties United States. See county_complete data set additional variables.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/county.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"United States Counties — county","text":"","code":"county"},{"path":"https://openintrostat.github.io/usdata/reference/county.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"United States Counties — county","text":"data frame 3142 observations following 14 variables. name County names. state State names. pop2000 Population 2000. pop2010 Population 2010. pop2017 Population 2017. pop_change Population change 2010 2017. poverty Percent population poverty 2017. homeownership Home ownership rate, 2006-2010. multi_unit Percent housing units multi-unit structures, 2006-2010. unemployment_rate Unemployment rate 2017. metro Whether county contains metropolitan area. median_edu Median education level (2013-2017). per_capita_income Per capita (per person) income (2013-2017). median_hh_income Median household income. smoking_ban Describes whether type county-level smoking ban place 2010, taking one values \"none\", \"partial\", \"comprehensive\".","code":""},{"path":"https://openintrostat.github.io/usdata/reference/county.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"United States Counties — county","text":"data collected Census Quick Facts (longer available 2020) accompanying pages. Smoking ban data variety sources.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/usdata/reference/county.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"United States Counties — county","text":"","code":"library(ggplot2)  ggplot(county, aes(x = median_edu, y = median_hh_income)) +   geom_boxplot() #> Warning: Removed 2 rows containing non-finite outside the scale range #> (`stat_boxplot()`)."},{"path":"https://openintrostat.github.io/usdata/reference/county_2019.html","id":null,"dir":"Reference","previous_headings":"","what":"American Community Survey 2019 — county_2019","title":"American Community Survey 2019 — county_2019","text":"Data 3142 counties United States many variables 2019 American Community Survey.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/county_2019.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"American Community Survey 2019 — county_2019","text":"","code":"county_2019"},{"path":"https://openintrostat.github.io/usdata/reference/county_2019.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"American Community Survey 2019 — county_2019","text":"data frame 3142 observations following 95 variables. state State. name County name. fips FIPS code. median_individual_income Median individual income (2019). median_individual_income_moe Margin error median_individual_income. pop 2019 population. pop_moe Margin error pop. white Percent population white alone (2015-2019). white_moe Margin error white. black Percent population black alone (2015-2019). black_moe Margin error black. native Percent population Native American alone (2015-2019). native_moe Margin error native. asian Percent population Asian alone (2015-2019). asian_moe Margin error asian. pac_isl Percent population Native Hawaiian Pacific Islander alone (2015-2019). pac_isl_moe Margin error pac_isl. other_single_race Percent population race alone  (2015-2019). other_single_race_moe Margin error other_single_race. two_plus_races Percent population two races (2015-2019). two_plus_races_moe Margin error two_plus_races. hispanic Percent population identifies Hispanic Latino (2015-2019). hispanic_moe Margin error hispanic. white_not_hispanic Percent population white alone, Hispanic Latino (2015-2019). white_not_hispanic_moe Margin error white_not_hispanic. median_age Median age (2015-2019). median_age_moe Margin error median_age. age_under_5 Percent population 5 (2015-2019). age_under_5_moe Margin error age_under_5. age_over_85 Percent population 85 (2015-2019). age_over_85_moe Margin error age_over_85. age_over_18 Percent population 18 (2015-2019). age_over_18_moe Margin error age_over_18. age_over_65 Percent population 65 (2015-2019). age_over_65_moe Margin error age_over_65. mean_work_travel Mean travel time work (2015-2019). mean_work_travel_moe Margin error mean_work_travel. persons_per_household Persons per household (2015-2019) persons_per_household_moe Margin error persons_per_household. avg_family_size Average family size (2015-2019). avg_family_size_moe Margin error avg_family_size. housing_one_unit_structures Percent housing units 1-unit structures (2015-2019). housing_one_unit_structures_moe Margin error housing_one_unit_structures. housing_two_unit_structures Percent housing units multi-unit structures (2015-2019). housing_two_unit_structures_moe Margin error housing_two_unit_structures. housing_mobile_homes Percent housing units mobile homes types units (2015-2019). housing_mobile_homes_moe Margin error housing_mobile_homes. median_individual_income_age_25plus Median individual income (2019 dollars, 2015-2019). median_individual_income_age_25plus_moe Margin error median_individual_income_age_25plus. hs_grad Percent population 25 older high school graduate (2015-2019). hs_grad_moe Margin error hs_grad. bachelors Percent population 25 older earned Bachelor's degree higher (2015-2019). bachelors_moe Margin error bachelors. households Total households (2015-2019). households_moe Margin error households. households_speak_spanish Percent households speaking Spanish (2015-2019). households_speak_spanish_moe Margin error households_speak_spanish. households_speak_other_indo_euro_lang Percent households speaking Indo-European language (2015-2019). households_speak_other_indo_euro_lang_moe Margin error households_speak_other_indo_euro_lang. households_speak_asian_or_pac_isl Percent households speaking Asian Pacific Island language (2015-2019). households_speak_asian_or_pac_isl_moe Margin error households_speak_asian_or_pac_isl. households_speak_other Percent households speaking non European Asian/Pacific Island language (2015-2019). households_speak_other_moe Margin error households_speak_other. households_speak_limited_english Percent limited English-speaking households (2015-2019). households_speak_limited_english_moe Margin error households_speak_limited_english. poverty Percent population poverty level (2015-2019). poverty_moe Margin error poverty. poverty_under_18 Percent population 18 poverty level (2015-2019). poverty_under_18_moe Margin error poverty_under_18. poverty_65_and_over Percent population 65 poverty level (2015-2019). poverty_65_and_over_moe Margin error poverty_65_and_over. mean_household_income Mean household income (2019 dollars, 2015-2019). mean_household_income_moe Margin error mean_household_income. per_capita_income Per capita money income past 12 months (2019 dollars, 2015-2019). per_capita_income_moe Margin error per_capita_income. median_household_income Median household income (2015-2019). median_household_income_moe Margin error median_household_income. veterans Percent among civilian population 18 veterans (2015-2019). veterans_moe Margin error veterans. unemployment_rate Unemployment rate among ages 20-64 (2015-2019). unemployment_rate_moe Margin error unemployment_rate. uninsured Percent civilian noninstitutionalized population uninsured (2015-2019). uninsured_moe Margin error uninsured. uninsured_under_6 Percent population 6 years uninsured (2015-2019). uninsured_under_6_moe Margin error uninsured_under_6. uninsured_under_19 Percent population 19 uninsured (2015-2019). uninsured_under_19_moe Margin error uninsured_under_19. uninsured_65_and_older Percent population 65 older uninsured (2015-2019). uninsured_65_and_older_moe Margin error uninsured_65_and_older. household_has_computer Percent households desktop laptop computer (2015-2019). household_has_computer_moe Margin error household_has_computer. household_has_smartphone Percent households smartphone (2015-2019). household_has_smartphone_moe Margin error household_has_smartphone. household_has_broadband Percent households broadband internet subscription (2015-2019). household_has_broadband_moe Margin error household_has_broadband.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/county_2019.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"American Community Survey 2019 — county_2019","text":"data downloaded via tidycensus R package.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/usdata/reference/county_2019.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"American Community Survey 2019 — county_2019","text":"","code":"library(ggplot2)  ggplot(   county_2019,   aes(     x = hs_grad, y = median_individual_income,     size = sqrt(pop) / 1000   ) ) +   geom_point(alpha = 0.5) +   scale_color_discrete(na.translate = FALSE) +   guides(size = FALSE) +   labs(     x = \"Percentage of population graduated from high school\",     y = \"Median individual income\"   ) #> Warning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as #> of ggplot2 3.3.4."},{"path":"https://openintrostat.github.io/usdata/reference/county_complete.html","id":null,"dir":"Reference","previous_headings":"","what":"United States Counties — county_complete","title":"United States Counties — county_complete","text":"Data 3142 counties United States.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/county_complete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"United States Counties — county_complete","text":"","code":"county_complete"},{"path":"https://openintrostat.github.io/usdata/reference/county_complete.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"United States Counties — county_complete","text":"data frame 3142 observations following 188 variables. state State. name County name. fips FIPS code. pop2000 2000 population. pop2010 2010 population. pop2011 2011 population. pop2012 2012 population. pop2013 2013 population. pop2014 2014 population. pop2015 2015 population. pop2016 2016 population. pop2017 2017 population. age_under_5_2010 Percent population 5 (2010). age_under_5_2017 Percent population 5 (2017). age_under_18_2010 Percent population 18 (2010). age_over_65_2010 Percent population 65 (2010). age_over_65_2017 Percent population 65 (2017). median_age_2017 Median age (2017). female_2010 Percent population female (2010). white_2010 Percent population white (2010). black_2010 Percent population black (2010). black_2017 Percent population black (2017). native_2010 Percent population Native American (2010). native_2017 Percent population Native American (2017). asian_2010 Percent population Asian (2010). asian_2017 Percent population Asian (2017). pac_isl_2010 Percent population Hawaii Pacific Islander (2010). pac_isl_2017 Percent population Hawaii Pacific Islander (2017). other_single_race_2017 Percent population identifies another single race (2017). two_plus_races_2010 Percent population identifies two races (2010). two_plus_races_2017 Percent population identifies two races (2017). hispanic_2010 Percent population Hispanic (2010). hispanic_2017 Percent population Hispanic (2017). white_not_hispanic_2010 Percent population white Hispanic (2010). white_not_hispanic_2017 Percent population white Hispanic (2017). speak_english_only_2017 Percent population speaks English (2017). no_move_in_one_plus_year_2010 Percent population moved least one year (2006-2010). foreign_born_2010 Percent population foreign-born (2006-2010). foreign_spoken_at_home_2010 Percent population speaks foreign language home (2006-2010). women_16_to_50_birth_rate_2017 Birth rate women ages 16 50 (2017). hs_grad_2010 Percent population high school graduate (2006-2010). hs_grad_2016 Percent population high school graduate (2012-2016). hs_grad_2017 Percent population high school graduate (2017). some_college_2016 Percent population college education (2012-2016). some_college_2017 Percent population college education (2017). bachelors_2010 Percent population earned bachelor's degree (2006-2010). bachelors_2016 Percent population earned bachelor's degree (2012-2016). bachelors_2017 Percent population earned bachelor's degree (2017). veterans_2010 Percent population veterans (2006-2010). veterans_2017 Percent population veterans (2017). mean_work_travel_2010 Mean travel time work (2006-2010). mean_work_travel_2017 Mean travel time work (2017). broadband_2017 Percent population access broadband (2017). computer_2017 Percent population access computer (2017). housing_units_2010 Number housing units (2010). homeownership_2010 Home ownership rate (2006-2010). housing_multi_unit_2010 Housing units multi-unit structures (2006-2010). median_val_owner_occupied_2010 Median value owner-occupied housing units (2006-2010). households_2010 Households (2006-2010). households_2017 Households (2017). persons_per_household_2010 Persons per household (2006-2010). persons_per_household_2017 Persons per household (2017). per_capita_income_2010 Per capita money income past 12 months (2010 dollars, 2006-2010) per_capita_income_2017 Per capita money income past 12 months (2017 dollars, 2017) metro_2013 Whether county contained metropolitan area 2013. median_household_income_2010 Median household income (2006-2010). median_household_income_2016 Median household income (2012-2016). median_household_income_2017 Median household income (2017). private_nonfarm_establishments_2009 Private nonfarm establishments (2009). private_nonfarm_employment_2009 Private nonfarm employment (2009). percent_change_private_nonfarm_employment_2009 Private nonfarm employment, percent change 2000 2009. nonemployment_establishments_2009 Nonemployer establishments (2009). firms_2007 Total number firms (2007). black_owned_firms_2007 Black-owned firms, percent (2007). native_owned_firms_2007 Native American-owned firms, percent (2007). asian_owned_firms_2007 Asian-owned firms, percent (2007). pac_isl_owned_firms_2007 Native Hawaiian Pacific Islander-owned firms, percent (2007). hispanic_owned_firms_2007 Hispanic-owned firms, percent (2007). women_owned_firms_2007 Women-owned firms, percent (2007). manufacturer_shipments_2007 Manufacturer shipments, 2007 ($1000). mercent_whole_sales_2007 Mercent wholesaler sales, 2007 ($1000). sales_2007 Retail sales, 2007 ($1000). sales_per_capita_2007 Retail sales per capita, 2007. accommodation_food_service_2007 Accommodation food services sales, 2007 ($1000). building_permits_2010 Building permits (2010). fed_spending_2009 Federal spending, thousands dollars (2009). area_2010 Land area square miles (2010). density_2010 Persons per square mile (2010). smoking_ban_2010 Describes whether type county-level smoking ban place 2010, taking one values \"none\", \"partial\", \"comprehensive\". poverty_2010 Percent population poverty level (2006-2010). poverty_2016 Percent population poverty level (2012-2016). poverty_2017 Percent population poverty level (2017). poverty_age_under_5_2017 Percent population age 5 poverty level (2017). poverty_age_under_18_2017 Percent population age 18 poverty level (2017). civilian_labor_force_2007 Civilian labor force 2007. employed_2007 Number civilians employed 2007. unemployed_2007 Number civilians unemployed 2007. unemployment_rate_2007 Unemployment rate 2007. civilian_labor_force_2008 Civilian labor force 2008. employed_2008 Number civilians employed 2008. unemployed_2008 Number civilians unemployed 2008. unemployment_rate_2008 Unemployment rate 2008. civilian_labor_force_2009 Civilian labor force 2009. employed_2009 Number civilians employed 2009. unemployed_2009 Number civilians unemployed 2009. unemployment_rate_2009 Unemployment rate 2009. civilian_labor_force_2010 Civilian labor force 2010. employed_2010 Number civilians employed 2010. unemployed_2010 Number civilians unemployed 2010. unemployment_rate_2010 Unemployment rate 2010. civilian_labor_force_2011 Civilian labor force 2011. employed_2011 Number civilians employed 2011. unemployed_2011 Number civilians unemployed 2011. unemployment_rate_2011 Unemployment rate 2011. civilian_labor_force_2012 Civilian labor force 2012. employed_2012 Number civilians employed 2012. unemployed_2012 Number civilians unemployed 2012. unemployment_rate_2012 Unemployment rate 2012. civilian_labor_force_2013 Civilian labor force 2013. employed_2013 Number civilians employed 2013. unemployed_2013 Number civilians unemployed 2013. unemployment_rate_2013 Unemployment rate 2013. civilian_labor_force_2014 Civilian labor force 2014. employed_2014 Number civilians employed 2014. unemployed_2014 Number civilians unemployed 2014. unemployment_rate_2014 Unemployment rate 2014. civilian_labor_force_2015 Civilian labor force 2015. employed_2015 Number civilians employed 2015. unemployed_2015 Number civilians unemployed 2015. unemployment_rate_2015 Unemployment rate 2015. civilian_labor_force_2016 Civilian labor force 2016. employed_2016 Number civilians employed 2016. unemployed_2016 Number civilians unemployed 2016. unemployment_rate_2016 Unemployment rate 2016. uninsured_2017 Percent population uninsured (2017). uninsured_age_under_6_2017 Percent population 6 uninsured (2017). uninsured_age_under_19_2017 Percent population 19 uninsured (2017). uninsured_age_over_74_2017 Percent population 74 uninsured (2017). civilian_labor_force_2017 Civilian labor force 2017. employed_2017 Number civilians employed 2017. unemployed_2017 Number civilians unemployed 2017. unemployment_rate_2017 Unemployment rate 2017. median_individual_income_2019 Median individual income (2019). pop_2019 2019 population. white_2019 Percent population white alone (2015-2019). black_2019 Percent population black alone (2015-2019). native_2019 Percent population Native American alone (2015-2019). asian_2019 Percent population Asian alone (2015-2019). pac_isl_2019 Percent population Native Hawaiian Pacific Islander alone (2015-2019). other_single_race_2019 Percent population race alone  (2015-2019). two_plus_races_2019 Percent population two races (2015-2019). hispanic_2019 Percent population identifies Hispanic Latino (2015-2019). white_not_hispanic_2019 Percent population white alone, Hispanic Latino (2015-2019). median_age_2019 Median age (2015-2019). age_under_5_2019 Percent population 5 (2015-2019). age_over_85_2019 Percent population 85 (2015-2019). age_over_18_2019 Percent population 18 (2015-2019). age_over_65_2019 Percent population 65 (2015-2019). mean_work_travel_2019 Mean travel time work (2015-2019). persons_per_household_2019 Persons per household (2015-2019) avg_family_size_2019 Average family size (2015-2019). housing_one_unit_structures_2019 Percent housing units 1-unit structures (2015-2019). housing_two_unit_structures_2019 Percent housing units multi-unit structures (2015-2019). housing_mobile_homes_2019 Percent housing units mobile homes types units (2015-2019). median_individual_income_age_25plus_2019 Median individual income (2019 dollars, 2015-2019). hs_grad_2019 Percent population 25 older high school graduate (2015-2019). bachelors_2019 Percent population 25 older earned Bachelor's degree higher (2015-2019). households_2019 Total households (2015-2019). households_speak_spanish_2019 Percent households speaking Spanish (2015-2019). households_speak_other_indo_euro_lang_2019 Percent households speaking Indo-European language (2015-2019). households_speak_asian_or_pac_isl_2019 Percent households speaking Asian Pacific Island language (2015-2019). households_speak_other_2019 Percent households speaking non European Asian/Pacific Island language (2015-2019). households_speak_limited_english_2019 Percent limited English-speaking households (2015-2019). poverty_2019 Percent population poverty level (2015-2019). poverty_under_18_2019 Percent population 18 poverty level (2015-2019). poverty_65_and_over_2019 Percent population 65 poverty level (2015-2019). mean_household_income_2019 Mean household income (2019 dollars, 2015-2019). per_capita_income_2019 Per capita money income past 12 months (2019 dollars, 2015-2019). median_household_income_2019 Median household income (2015-2019). veterans_2019 Percent among civilian population 18 veterans (2015-2019). unemployment_rate_2019 Unemployment rate among ages 20-64 (2015-2019). uninsured_2019 Percent civilian noninstitutionalized population uninsured (2015-2019). uninsured_under_6_2019 Percent population 6 years uninsured (2015-2019). uninsured_under_19_2019 Percent population 19 uninsured (2015-2019). uninsured_65_and_older_2019 Percent population 65 older uninsured (2015-2019). household_has_computer_2019 Percent households desktop laptop computer (2015-2019). household_has_smartphone_2019 Percent households smartphone (2015-2019). household_has_broadband_2019 Percent households broadband internet subscription (2015-2019).","code":""},{"path":"https://openintrostat.github.io/usdata/reference/county_complete.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"United States Counties — county_complete","text":"data prior 2011 http://census.gov, though exact page came longer available. recent data comes following sources. Downloaded via tidycensus R package. Download links spreadsheets found https://www.ers.usda.gov/data-products/county-level-data-sets/download-data Unemployment - Bureau Labor Statistics - LAUS data - https://www.bls.gov/lau/. Median Household Income - Census Bureau - Small Area Income Poverty Estimates (SAIPE) data. original data table prepared USDA, Economic Research Service. Census Bureau. 2012-16 American Community Survey 5-yr average. original data table prepared USDA, Economic Research Service. Tim Parker (tparker ers.usda.gov) contact much new data incorporated data set.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/usdata/reference/county_complete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"United States Counties — county_complete","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(ggplot2)  county_complete |>   mutate(     pop_change = 100 * ((pop2017 / pop2013) - 1),     metro_area = if_else(metro_2013 == 1, TRUE, FALSE)   ) |>   ggplot(aes(     x = poverty_2016,     y = pop_change,     color = metro_area,     size = sqrt(pop2017) / 1e3   )) +   geom_point(alpha = 0.5) +   scale_color_discrete(na.translate = FALSE) +   guides(size = FALSE) +   labs(     x = \"Percentage of population in poverty (2016)\",     y = \"Percentage population change between 2013 to 2017\",     color = \"Metropolitan area\",     title = \"Population change and poverty\"   ) #> Warning: Removed 6 rows containing missing values or values outside the scale range #> (`geom_point()`).   # Counties with high population change county_complete |>   mutate(pop_change = 100 * ((pop2017 / pop2013) - 1)) |>   filter(pop_change < -10 | pop_change > 25) |>   select(state, name, fips, pop_change) #>            state                 name  fips pop_change #> 1       Colorado    Kit Carson County  8063  -13.06777 #> 2        Georgia Chattahoochee County 13053  -15.53977 #> 3       Illinois     Alexander County 17003  -12.70390 #> 4         Kansas        Morton County 20129  -12.15133 #> 5   North Dakota      McKenzie County 38053   37.18598 #> 6      Tennessee     Trousdale County 47169   29.25266 #> 7          Texas        Concho County 48095  -33.63459 #> 8          Texas      Hudspeth County 48229   32.09470 #> 9          Texas        Loving County 48301   26.41509 #> 10 West Virginia      McDowell County 54047  -11.72335  # Population by metro area county_complete |>   mutate(metro_area = if_else(metro_2013 == 1, TRUE, FALSE)) |>   filter(!is.na(metro_area)) |>   ggplot(aes(x = metro_area, y = log(pop2017))) +   geom_violin() +   labs(     x = \"Metro area\",     y = \"Log of population in 2017\",     title = \"Population by metro area\"   ) #> Warning: Removed 3 rows containing non-finite outside the scale range #> (`stat_ydensity()`).   # Poverty and median household income county_complete |>   mutate(metro_area = if_else(metro_2013 == 1, TRUE, FALSE)) |>   ggplot(aes(     x = poverty_2016,     y = median_household_income_2016,     color = metro_area,     size = sqrt(pop2017) / 1e3   )) +   geom_point(alpha = 0.5) +   scale_color_discrete(na.translate = FALSE) +   guides(size = FALSE) +   labs(     x = \"Percentage of population in poverty (2016)\",     y = \"Median household income (2016)\",     color = \"Metropolitan area\",     title = \"Poverty and median household income\"   ) #> Warning: Removed 6 rows containing missing values or values outside the scale range #> (`geom_point()`).   # Unemployment rate and poverty county_complete |>   mutate(metro_area = if_else(metro_2013 == 1, TRUE, FALSE)) |>   ggplot(aes(     x = unemployment_rate_2017,     y = poverty_2016,     color = metro_area,     size = sqrt(pop2017) / 1e3   )) +   geom_point(alpha = 0.5) +   scale_color_discrete(na.translate = FALSE) +   guides(size = FALSE) +   labs(     x = \"Unemployment rate (2017)\",     y = \"Percentage of population in poverty (2016)\",     color = \"Metropolitan area\",     title = \"Unemployment rate and poverty\"   ) #> Warning: Removed 6 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://openintrostat.github.io/usdata/reference/fatal_police_shootings.html","id":null,"dir":"Reference","previous_headings":"","what":"Fatal Police Shootings data. — fatal_police_shootings","title":"Fatal Police Shootings data. — fatal_police_shootings","text":"subset Washington Post database. Contains records every fatal police shooting -duty officer since January 1, 2015.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/fatal_police_shootings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fatal Police Shootings data. — fatal_police_shootings","text":"","code":"fatal_police_shootings"},{"path":"https://openintrostat.github.io/usdata/reference/fatal_police_shootings.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fatal Police Shootings data. — fatal_police_shootings","text":"data frame 6421 rows 12 variables. date date fatal shooting. manner_of_death shot shot Tasered. armed Indicates victim armed sort implement police officer believed inflict harm. age age victim. gender gender victim. Post identifies victims gender identify reports indicate differs biological sex. race W White non-Hispanic; B Black non-Hispanic; Asian; N Native American; H Hispanic; O None unknown. city municipality fatal shooting took place. Note cases field may contain county name specific municipality unavailable unknown. state two-letter postal code abbreviation. signs_of_mental_illness news reports indicated victim history mental health issues, expressed suicidal intentions experiencing mental distress time shooting. threat_level general criteria attack label direct immediate threat life include incidents officers others shot , threatened gun, attacked weapons physical force, etc. ; attack category meant flag highest level threat; undetermined categories represent remaining cases; includes many incidents officers others faced significant threats. flee news reports indicated victim moving away officers Foot, Car, fleeing. body_camera news reports indicated officer wearing body camera may recorded portion incident.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/fatal_police_shootings.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Fatal Police Shootings data. — fatal_police_shootings","text":"Washington Post","code":""},{"path":"https://openintrostat.github.io/usdata/reference/fatal_police_shootings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fatal Police Shootings data. — fatal_police_shootings","text":"","code":"library(dplyr)  # List race frequency and percentage fatal_police_shootings |>   group_by(race) |>   summarize(n = n()) |>   mutate(freq = n / sum(n) * 100) #> # A tibble: 7 × 3 #>   race      n   freq #>   <chr> <int>  <dbl> #> 1 A       105  1.64  #> 2 B      1528 23.8   #> 3 H      1066 16.6   #> 4 N        90  1.40  #> 5 O        47  0.732 #> 6 W      2919 45.5   #> 7 NA      666 10.4   # List different weapons that victims were armed with fatal_police_shootings |>   distinct(armed) #> # A tibble: 99 × 1 #>    armed      #>    <chr>      #>  1 gun        #>  2 unarmed    #>  3 toy weapon #>  4 nail gun   #>  5 knife      #>  6 NA         #>  7 shovel     #>  8 vehicle    #>  9 hammer     #> 10 hatchet    #> # ℹ 89 more rows"},{"path":"https://openintrostat.github.io/usdata/reference/gerrymander.html","id":null,"dir":"Reference","previous_headings":"","what":"Gerrymander — gerrymander","title":"Gerrymander — gerrymander","text":"dataset gerrymandering influence House elections. data set originally built Jeff Whitmer.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/gerrymander.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gerrymander — gerrymander","text":"","code":"gerrymander"},{"path":"https://openintrostat.github.io/usdata/reference/gerrymander.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gerrymander — gerrymander","text":"data frame 435 rows 12 variables: district Congressional district. last_name Last name 2016 election winner. first_name First name 2016 election winnner. party16 Political party 2016 election winner. clinton16 Percent vote received Clinton 2016 Presidential Election. trump16 Percent vote received Trump 2016 Presidential Election. dem16 Democrat win 2016 House election. Levels 1 (yes) 0 (). state State Representative . party18 Political Party 2018 election winner. dem18 Democrat win 2018 House election. Levels 1 (yes) 0 (). flip18 Democrat flip seat 2018 election? Levels 1 (yes) 0 (). gerry Categorical variable prevalence gerrymandering levels low, mid high.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/gerrymander.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Gerrymander — gerrymander","text":"Washington Post","code":""},{"path":"https://openintrostat.github.io/usdata/reference/gerrymander.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gerrymander — gerrymander","text":"","code":"library(ggplot2) library(dplyr) ggplot(gerrymander |> filter(gerry != \"mid\"), aes(clinton16, dem16, color = gerry)) +   geom_jitter(height = 0.05, size = 3, shape = 1) +   geom_smooth(method = \"glm\", method.args = list(family = \"binomial\"), se = FALSE) +   scale_color_manual(values = c(\"purple\", \"orange\")) +   labs(     title = \"Logistic Regression of 2016 House Elections\",     subtitle = \"by Congressional District\",     x = \"Percent of Presidential Vote Won by Clinton\",     y = \"Seat Won by Democrat Candidate\",     color = \"Gerrymandering\"   ) #> `geom_smooth()` using formula = 'y ~ x'"},{"path":"https://openintrostat.github.io/usdata/reference/govrace10.html","id":null,"dir":"Reference","previous_headings":"","what":"Election results for 2010 Governor races in the U.S. — govrace10","title":"Election results for 2010 Governor races in the U.S. — govrace10","text":"Election results 2010 Governor races U.S.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/govrace10.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Election results for 2010 Governor races in the U.S. — govrace10","text":"","code":"govrace10"},{"path":"https://openintrostat.github.io/usdata/reference/govrace10.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Election results for 2010 Governor races in the U.S. — govrace10","text":"data frame 37 observations following 23 variables. id Unique identifier race, overlap 2010 races (see houserace10 senaterace10) state State name abbr State name abbreviation name1 Name winning candidate perc1 Percentage vote winning candidate (one candidate) party1 Party winning candidate votes1 Number votes winning candidate name2 Name candidate second votes perc2 Percentage vote candidate came second party2 Party candidate second votes votes2 Number votes candidate came second name3 Name candidate third votes perc3 Percentage vote candidate came third party3 Party candidate third votes votes3 Number votes candidate came third name4 Name candidate fourth votes perc4 Percentage vote candidate came fourth party4 Party candidate fourth votes votes4 Number votes candidate came fourth name5 Name candidate fifth votes perc5 Percentage vote candidate came fifth party5 Party candidate fifth votes votes5 Number votes candidate came fifth","code":""},{"path":"https://openintrostat.github.io/usdata/reference/govrace10.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Election results for 2010 Governor races in the U.S. — govrace10","text":"MSNBC.com, retrieved 2010-11-09.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/govrace10.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Election results for 2010 Governor races in the U.S. — govrace10","text":"","code":"table(govrace10$party1, govrace10$party2) #>               #>               Democrat Independent Other: American Constitution Republican #>   Democrat           0           0                            1         12 #>   Independent        0           0                            0          1 #>   Republican        22           1                            0          0"},{"path":"https://openintrostat.github.io/usdata/reference/houserace10.html","id":null,"dir":"Reference","previous_headings":"","what":"Election results for the 2010 U.S. House of Represenatives races — houserace10","title":"Election results for the 2010 U.S. House of Represenatives races — houserace10","text":"Election results 2010 U.S. House Represenatives races","code":""},{"path":"https://openintrostat.github.io/usdata/reference/houserace10.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Election results for the 2010 U.S. House of Represenatives races — houserace10","text":"","code":"houserace10"},{"path":"https://openintrostat.github.io/usdata/reference/houserace10.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Election results for the 2010 U.S. House of Represenatives races — houserace10","text":"data frame 435 observations following 24 variables. id Unique identifier race, overlap 2010 races (see govrace10 senaterace10) state State name abbr State name abbreviation num District number state name1 Name winning candidate perc1 Percentage vote winning candidate (one candidate) party1 Party winning candidate votes1 Number votes winning candidate name2 Name candidate second votes perc2 Percentage vote candidate came second party2 Party candidate second votes votes2 Number votes candidate came second name3 Name candidate third votes perc3 Percentage vote candidate came third party3 Party candidate third votes votes3 Number votes candidate came third name4 Name candidate fourth votes perc4 Percentage vote candidate came fourth party4 Party candidate fourth votes votes4 Number votes candidate came fourth name5 Name candidate fifth votes perc5 Percentage vote candidate came fifth party5 Party candidate fifth votes votes5 Number votes candidate came fifth","code":""},{"path":"https://openintrostat.github.io/usdata/reference/houserace10.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Election results for the 2010 U.S. House of Represenatives races — houserace10","text":"MSNBC.com, retrieved 2010-11-09.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/houserace10.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Election results for the 2010 U.S. House of Represenatives races — houserace10","text":"analysis Examples section inspired similar Nate Silver's district-level analysis FiveThirtyEight blog New York Times: https://fivethirtyeight.com/features/2010--aligning-election/","code":""},{"path":"https://openintrostat.github.io/usdata/reference/houserace10.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Election results for the 2010 U.S. House of Represenatives races — houserace10","text":"","code":"hr <- table(houserace10[, c(\"abbr\", \"party1\")]) nr <- apply(hr, 1, sum)  pr <- prrace08[prrace08$state != \"DC\", c(\"state\", \"p_obama\")] hr <- hr[as.character(pr$state), ] (fit <- glm(hr ~ pr$p_obama, family = binomial)) #>  #> Call:  glm(formula = hr ~ pr$p_obama, family = binomial) #>  #> Coefficients: #> (Intercept)   pr$p_obama   #>      -5.726        0.103   #>  #> Degrees of Freedom: 49 Total (i.e. Null);  48 Residual #> Null Deviance:\t    107.4  #> Residual Deviance: 48.72 \tAIC: 138.7  x1 <- pr$p_obama[match(houserace10$abbr, pr$state)] y1 <- (houserace10$party1 == \"Democrat\") + 0 g <- glm(y1 ~ x1, family = binomial)   x <- pr$p_obama[pr$state != \"DC\"] nr <- apply(hr, 1, sum) plot(x, hr[, \"Democrat\"] / nr,   pch = 19, cex = sqrt(nr), col = \"#22558844\",   xlim = c(20, 80), ylim = c(0, 1),   xlab = \"Percent vote for Obama in 2008\",   ylab = \"Probability of Democrat winning House seat\" ) X <- seq(0, 100, 0.1) lo <- -5.6079 + 0.1009 * X p <- exp(lo) / (1 + exp(lo)) lines(X, p) abline(h = 0:1, lty = 2, col = \"#888888\")"},{"path":"https://openintrostat.github.io/usdata/reference/pierce_county_house_sales.html","id":null,"dir":"Reference","previous_headings":"","what":"Pierce County House Sales Data for 2020 — pierce_county_house_sales","title":"Pierce County House Sales Data for 2020 — pierce_county_house_sales","text":"Real estate sales Pierce County, WA 2020.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/pierce_county_house_sales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pierce County House Sales Data for 2020 — pierce_county_house_sales","text":"","code":"pierce_county_house_sales"},{"path":"https://openintrostat.github.io/usdata/reference/pierce_county_house_sales.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pierce County House Sales Data for 2020 — pierce_county_house_sales","text":"data frame 16814 rows 19 variables. sale_date Date legal document (deed) executed. sale_price Dollar amount recorded sale. house_square_feet Sum square feet building. attic_finished_square_feet Finished living area attic. basement_square_feet Total square footage basement.. attached_garage_square_feet Total square footage attached built garage(s). detached_garage_square_feet Total detached garage(s) square footage. fireplaces Total count single, double PreFab stoves. hvac_description Text description associated predominant heating source built-structure .e. Forced Air, Electric Baseboard, Steam, etc. . exterior Predominant type construction materials used exterior siding Residential Buildings. interior Predominant type materials used interior walls. .e. Sheetrock Paneling. stories Number floors/building levels grade. Stories include attic basement areas. roof_cover Material used roof. .e. Composition Shingles, Wood Shake, Concrete Tile, etc. year_built Year building built, stated building permit historical record. bedrooms Number bedrooms listed residential property. bathrooms Number baths listed residential property. number listed decimal, .e. 2.75 = two full one three-quarter baths. tub/sink/toilet combination (plus additional fixtures) considered 1.0 bath. shower/sink/toilet combination (plus additional fixtures) 0.75 bath. sink/toilet combination .5 bath. waterfront_type Describes type waterfront property adjoins legal access . view_quality Assigned reflect market appeal overall view available dwelling property. utility_sewer Identifies sewer/septic installed, available available property support site sewage disposal system.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/pierce_county_house_sales.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Pierce County House Sales Data for 2020 — pierce_county_house_sales","text":"Pierce County, Washington","code":""},{"path":"https://openintrostat.github.io/usdata/reference/pierce_county_house_sales.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pierce County House Sales Data for 2020 — pierce_county_house_sales","text":"","code":"library(dplyr) library(lubridate) #>  #> Attaching package: ‘lubridate’ #> The following objects are masked from ‘package:base’: #>  #>     date, intersect, setdiff, union  # List house sales frequency and average price grouped by month pierce_county_house_sales |>   mutate(month_sale = month(sale_date)) |>   group_by(month_sale) |>   summarize(freq = n(), mean_price = mean(sale_price)) |>   arrange(desc(freq)) #> # A tibble: 12 × 3 #>    month_sale  freq mean_price #>         <dbl> <int>      <dbl> #>  1         10  1743    477112. #>  2          9  1725    487640. #>  3          7  1699    470293. #>  4          8  1663    471328. #>  5          6  1531    460242. #>  6         11  1492    479536. #>  7         12  1429    485101. #>  8          3  1202    450739. #>  9          5  1156    430333. #> 10          4  1096    436553. #> 11          1  1056    408079. #> 12          2  1022    428170.  # List house sales frequency and average price group by waterfront type pierce_county_house_sales |>   group_by(waterfront_type) |>   summarize(freq = n(), mean_price = mean(sale_price)) |>   arrange(desc(mean_price)) #> # A tibble: 5 × 3 #>   waterfront_type    freq mean_price #>   <chr>             <int>      <dbl> #> 1 \"WF Salt\"           209   1109730. #> 2 \"WF Lake\"           225    898376. #> 3 \"WF Stream/Creek\"    93    496005. #> 4 \"WF River\"           26    447623. #> 5 \"\"                16261    446672."},{"path":"https://openintrostat.github.io/usdata/reference/pop_age_2019.html","id":null,"dir":"Reference","previous_headings":"","what":"Population Age 2019 Data. — pop_age_2019","title":"Population Age 2019 Data. — pop_age_2019","text":"State level data population age.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/pop_age_2019.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population Age 2019 Data. — pop_age_2019","text":"","code":"pop_age_2019"},{"path":"https://openintrostat.github.io/usdata/reference/pop_age_2019.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Population Age 2019 Data. — pop_age_2019","text":"data frame 2820 rows 4 variables. state State 2 letter abbreviation. state_name State name. age Age cohort population. population Population age cohort. state_total_population total estimated state population 2019","code":""},{"path":"https://openintrostat.github.io/usdata/reference/pop_age_2019.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Population Age 2019 Data. — pop_age_2019","text":"Centers Disease Control Prevention","code":""},{"path":"https://openintrostat.github.io/usdata/reference/pop_age_2019.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Population Age 2019 Data. — pop_age_2019","text":"","code":"library(dplyr)  # List age population for each state with percent of total pop_age_2019 |>   group_by(state_name, age) |>   mutate(percent = population / state_total_population * 100) |>   select(state_name, age, population, percent) #> # A tibble: 4,386 × 4 #> # Groups:   state_name, age [4,386] #>    state_name age   population percent #>    <chr>      <chr>      <dbl>   <dbl> #>  1 Alabama    0          56901    1.16 #>  2 Alabama    1          58290    1.19 #>  3 Alabama    2          59073    1.20 #>  4 Alabama    3          59799    1.22 #>  5 Alabama    4          60294    1.23 #>  6 Alabama    5          59568    1.21 #>  7 Alabama    6          58599    1.20 #>  8 Alabama    7          59537    1.21 #>  9 Alabama    8          60023    1.22 #> 10 Alabama    9          60241    1.23 #> # ℹ 4,376 more rows  pop_age_2019 |>   select(state_name, state_total_population) |>   distinct() |>   arrange(desc(state_total_population)) #> # A tibble: 51 × 2 #>    state_name     state_total_population #>    <chr>                           <dbl> #>  1 California                   39512223 #>  2 Texas                        28995881 #>  3 Florida                      21477737 #>  4 New York                     19453561 #>  5 Pennsylvania                 12801989 #>  6 Illinois                     12671821 #>  7 Ohio                         11689100 #>  8 Georgia                      10617423 #>  9 North Carolina               10488084 #> 10 Michigan                      9986857 #> # ℹ 41 more rows"},{"path":"https://openintrostat.github.io/usdata/reference/pop_race_2019.html","id":null,"dir":"Reference","previous_headings":"","what":"Population Race 2019 Data. — pop_race_2019","title":"Population Race 2019 Data. — pop_race_2019","text":"State level data population race.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/pop_race_2019.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population Race 2019 Data. — pop_race_2019","text":"","code":"pop_race_2019"},{"path":"https://openintrostat.github.io/usdata/reference/pop_race_2019.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Population Race 2019 Data. — pop_race_2019","text":"data frame 2820 rows 4 variables. state State 2 letter abbreviation. state_name State name. race race cohort population. hispanic indicates whether population Hispanic Latino population Population race cohort. state_total_population total estimated state population 2019","code":""},{"path":"https://openintrostat.github.io/usdata/reference/pop_race_2019.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Population Race 2019 Data. — pop_race_2019","text":"Centers Disease Control Prevention","code":""},{"path":"https://openintrostat.github.io/usdata/reference/pop_race_2019.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Population Race 2019 Data. — pop_race_2019","text":"","code":"library(dplyr)  # List race population for each state with percent of total pop_race_2019 |>   group_by(state_name, race, hispanic) |>   mutate(percent = population / state_total_population * 100) |>   select(state_name, race, hispanic, population, percent) #> # A tibble: 408 × 5 #> # Groups:   state_name, race, hispanic [408] #>    state_name race                             hispanic       population percent #>    <chr>      <chr>                            <chr>               <dbl>   <dbl> #>  1 Alabama    American Indian or Alaska Native Hispanic or L…       7823  0.160  #>  2 Alabama    American Indian or Alaska Native Not Hispanic …      30433  0.621  #>  3 Alabama    Asian or Pacific Islander        Hispanic or L…       4833  0.0986 #>  4 Alabama    Asian or Pacific Islander        Not Hispanic …      80310  1.64   #>  5 Alabama    Black or African American        Hispanic or L…      17693  0.361  #>  6 Alabama    Black or African American        Not Hispanic …    1324613 27.0    #>  7 Alabama    White                            Hispanic or L…     192929  3.93   #>  8 Alabama    White                            Not Hispanic …    3244551 66.2    #>  9 Alaska     American Indian or Alaska Native Hispanic or L…       7912  1.08   #> 10 Alaska     American Indian or Alaska Native Not Hispanic …     120349 16.5    #> # ℹ 398 more rows  pop_race_2019 |>   select(state_name, state_total_population) |>   distinct() |>   arrange(desc(state_total_population)) #> # A tibble: 52 × 2 #>    state_name   state_total_population #>    <chr>                         <dbl> #>  1 California                 39512223 #>  2 Texas                      28995881 #>  3 Florida                    21477737 #>  4 Pennsylvania               12801989 #>  5 Illinois                   12671821 #>  6 Ohio                       11689100 #>  7 Georgia                    10617423 #>  8 Michigan                    9986857 #>  9 New Jersey                  8882190 #> 10 Washington                  7614893 #> # ℹ 42 more rows"},{"path":"https://openintrostat.github.io/usdata/reference/prez_pwr.html","id":null,"dir":"Reference","previous_headings":"","what":"Presidential Power. — prez_pwr","title":"Presidential Power. — prez_pwr","text":"Data Pew Research Center poll Presidential power/control gas prices.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/prez_pwr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Presidential Power. — prez_pwr","text":"","code":"prez_pwr"},{"path":"https://openintrostat.github.io/usdata/reference/prez_pwr.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Presidential Power. — prez_pwr","text":"data frame 365 rows 3 variables. president Sitting President time poll. party Political party respondent levels d(emocrat) r(epublican). has_pwr Respondent answer question: \"price gasoline something president can alot , beyond president's control?\"","code":""},{"path":"https://openintrostat.github.io/usdata/reference/prez_pwr.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Presidential Power. — prez_pwr","text":"Pew Research Center, May 2006 & March 2012.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/prez_pwr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Presidential Power. — prez_pwr","text":"","code":"library(ggplot2) ggplot(prez_pwr, aes(has_pwr, fill = party)) +   geom_bar() +   labs(     title = \"Is the price of gasoline something the president can do alot about?\",     x = \"\",     y = \"Number of respondents\",     fill = \"Respondent Party\"   ) +   facet_wrap(~president)"},{"path":"https://openintrostat.github.io/usdata/reference/prrace08.html","id":null,"dir":"Reference","previous_headings":"","what":"Election results for the 2008 U.S. Presidential race — prrace08","title":"Election results for the 2008 U.S. Presidential race — prrace08","text":"Election results 2008 U.S. Presidential race","code":""},{"path":"https://openintrostat.github.io/usdata/reference/prrace08.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Election results for the 2008 U.S. Presidential race — prrace08","text":"","code":"prrace08"},{"path":"https://openintrostat.github.io/usdata/reference/prrace08.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Election results for the 2008 U.S. Presidential race — prrace08","text":"data frame 51 observations following 7 variables. state State name abbreviation state_full Full state name n_obama Number votes Barack Obama p_obama Proportion votes Barack Obama n_mc_cain Number votes John McCain p_mc_cain Proportion votes John McCain el_votes Number electoral votes state","code":""},{"path":"https://openintrostat.github.io/usdata/reference/prrace08.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Election results for the 2008 U.S. Presidential race — prrace08","text":"Presidential Election 2008, Electoral Popular Vote Summary, retrieved 2011-04-21.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/prrace08.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Election results for the 2008 U.S. Presidential race — prrace08","text":"Nebraska, 4 electoral votes went McCain 1 Obama. Otherwise electoral votes winner-take-.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/prrace08.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Election results for the 2008 U.S. Presidential race — prrace08","text":"","code":"# ===> Obtain 2010 US House Election Data <===# hr <- table(houserace10[, c(\"abbr\", \"party1\")]) nr <- apply(hr, 1, sum)  # ===> Obtain 2008 President Election Data <===# pr <- prrace08[prrace08$state != \"DC\", c(\"state\", \"p_obama\")] hr <- hr[as.character(pr$state), ] (fit <- glm(hr ~ pr$p_obama, family = binomial)) #>  #> Call:  glm(formula = hr ~ pr$p_obama, family = binomial) #>  #> Coefficients: #> (Intercept)   pr$p_obama   #>      -5.726        0.103   #>  #> Degrees of Freedom: 49 Total (i.e. Null);  48 Residual #> Null Deviance:\t    107.4  #> Residual Deviance: 48.72 \tAIC: 138.7  # ===> Visualizing Binomial outcomes <===# x <- pr$p_obama[pr$state != \"DC\"] nr <- apply(hr, 1, sum) plot(x, hr[, \"Democrat\"] / nr,   pch = 19, cex = sqrt(nr), col = \"#22558844\",   xlim = c(20, 80), ylim = c(0, 1), xlab = \"Percent vote for Obama in 2008\",   ylab = \"Probability of Democrat winning House seat\" )  # ===> Logistic Regression <===# x1 <- pr$p_obama[match(houserace10$abbr, pr$state)] y1 <- (houserace10$party1 == \"Democrat\") + 0 g <- glm(y1 ~ x1, family = binomial) X <- seq(0, 100, 0.1) lo <- -5.6079 + 0.1009 * X p <- exp(lo) / (1 + exp(lo)) lines(X, p) abline(h = 0:1, lty = 2, col = \"#888888\")"},{"path":"https://openintrostat.github.io/usdata/reference/senaterace10.html","id":null,"dir":"Reference","previous_headings":"","what":"Election results for the 2010 U.S. Senate races — senaterace10","title":"Election results for the 2010 U.S. Senate races — senaterace10","text":"Election results 2010 U.S. Senate races","code":""},{"path":"https://openintrostat.github.io/usdata/reference/senaterace10.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Election results for the 2010 U.S. Senate races — senaterace10","text":"","code":"senaterace10"},{"path":"https://openintrostat.github.io/usdata/reference/senaterace10.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Election results for the 2010 U.S. Senate races — senaterace10","text":"data frame 38 observations following 23 variables. id Unique identifier race, overlap 2010 races (see govrace10 houserace10) state State name abbr State name abbreviation name1 Name winning candidate perc1 Percentage vote winning candidate (one candidate) party1 Party winning candidate votes1 Number votes winning candidate name2 Name candidate second votes perc2 Percentage vote candidate came second party2 Party candidate second votes votes2 Number votes candidate came second name3 Name candidate third votes perc3 Percentage vote candidate came third party3 Party candidate third votes votes3 Number votes candidate came third name4 Name candidate fourth votes perc4 Percentage vote candidate came fourth party4 Party candidate fourth votes votes4 Number votes candidate came fourth name5 Name candidate fifth votes perc5 Percentage vote candidate came fifth party5 Party candidate fifth votes votes5 Number votes candidate came fifth","code":""},{"path":"https://openintrostat.github.io/usdata/reference/senaterace10.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Election results for the 2010 U.S. Senate races — senaterace10","text":"MSNBC.com, retrieved 2010-11-09.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/senaterace10.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Election results for the 2010 U.S. Senate races — senaterace10","text":"","code":"library(ggplot2)  ggplot(senaterace10, aes(x = perc1)) +   geom_histogram(binwidth = 5) +   labs(x = \"Winning candidate vote percentage\") #> Warning: Removed 1 row containing non-finite outside the scale range (`stat_bin()`)."},{"path":"https://openintrostat.github.io/usdata/reference/state2abbr.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert state names to abbreviations — state2abbr","title":"Convert state names to abbreviations — state2abbr","text":"Two utility functions. One converts state names state abbreviations, second opposite.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/state2abbr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert state names to abbreviations — state2abbr","text":"","code":"state2abbr(state)"},{"path":"https://openintrostat.github.io/usdata/reference/state2abbr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert state names to abbreviations — state2abbr","text":"state vector state name, little fuzzy matching.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/state2abbr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert state names to abbreviations — state2abbr","text":"Returns vector length corresponding state names abbreviations.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/usdata/reference/state2abbr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert state names to abbreviations — state2abbr","text":"David Diez","code":""},{"path":"https://openintrostat.github.io/usdata/reference/state2abbr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert state names to abbreviations — state2abbr","text":"","code":"state2abbr(\"Minnesota\") #> [1] \"MN\"  # Some spelling/capitalization errors okay state2abbr(\"mINnesta\") #> [1] \"MN\""},{"path":"https://openintrostat.github.io/usdata/reference/state_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"State-level data — state_stats","title":"State-level data — state_stats","text":"Information state collected official US Census website various sources.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/state_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"State-level data — state_stats","text":"","code":"state_stats"},{"path":"https://openintrostat.github.io/usdata/reference/state_stats.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"State-level data — state_stats","text":"data frame 51 observations following 23 variables. state State name. abbr State abbreviation (e.g. \"MN\"). fips FIPS code. pop2010 Population 2010. pop2000 Population 2000. homeownership Home ownership rate. multiunit Percent living units multi-unit structures. income Average income per capita. med_income Median household income. poverty Poverty rate. fed_spend Federal spending per capita. land_area Land area. smoke Percent population smokes. murder Murders per 100,000 people. robbery Robberies per 100,000. agg_assault Aggravated assaults per 100,000. larceny Larcenies per 100,000. motor_theft Vehicle theft per 100,000. soc_sec Percent individuals collecting social security. nuclear Percent power coming nuclear sources. coal Percent power coming coal sources. tr_deaths Traffic deaths per 100,000. tr_deaths_no_alc Traffic deaths per 100,000 alcohol factor. unempl Unemployment rate (February 2012, preliminary).","code":""},{"path":"https://openintrostat.github.io/usdata/reference/state_stats.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"State-level data — state_stats","text":"Census Quick Facts (longer available 2020), InfoChimps (also longer available 2020), National Highway Traffic Safety Administration (tr_deaths, tr_deaths_no_alc), Bureau Labor Statistics (unempl).","code":""},{"path":"https://openintrostat.github.io/usdata/reference/state_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"State-level data — state_stats","text":"","code":"library(ggplot2) library(dplyr) library(maps)  states_selected <- state_stats |>   mutate(region = tolower(state)) |>   select(region, unempl, murder, nuclear)  states_map <- map_data(\"state\") |>   inner_join(states_selected) #> Joining with `by = join_by(region)`  # Unemployment map ggplot(states_map, aes(map_id = region)) +   geom_map(aes(fill = unempl), map = states_map) +   expand_limits(x = states_map$long, y = states_map$lat) +   scale_fill_viridis_c() +   labs(x = \"\", y = \"\", fill = \"Unemployment\\n(%)\")   # Murder rate map states_map |>   filter(region != \"district of columbia\") |>   ggplot(aes(map_id = region)) +   geom_map(aes(fill = murder), map = states_map) +   expand_limits(x = states_map$long, y = states_map$lat) +   scale_fill_viridis_c() +   labs(x = \"\", y = \"\", fill = \"Murders\\nper 100k\")   # Nuclear energy map ggplot(states_map, aes(map_id = region)) +   geom_map(aes(fill = nuclear), map = states_map) +   expand_limits(x = states_map$long, y = states_map$lat) +   scale_fill_viridis_c() +   labs(x = \"\", y = \"\", fill = \"Nuclear energy\\n(%)\")"},{"path":"https://openintrostat.github.io/usdata/reference/urban_owner.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of many state-level variables — urban_owner","title":"Summary of many state-level variables — urban_owner","text":"Census data 50 states plus DC Puerto Rico.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/urban_owner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of many state-level variables — urban_owner","text":"","code":"urban_owner"},{"path":"https://openintrostat.github.io/usdata/reference/urban_owner.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Summary of many state-level variables — urban_owner","text":"data frame 52 observations following 28 variables. state State total_housing_units_2000 Total housing units available 2000. total_housing_units_2010 Total housing units available 2010. pct_vacant numeric vector occupied Occupied. pct_owner_occupied numeric vector pop_st numeric vector area_st numeric vector pop_urban numeric vector poppct_urban numeric vector area_urban numeric vector areapct_urban numeric vector popden_urban numeric vector pop_ua numeric vector poppct_urban.1 numeric vector area_ua numeric vector areapct_ua numeric vector popden_ua numeric vector pop_uc numeric vector poppct_uc numeric vector area_uc numeric vector areapct_uc numeric vector popden_uc numeric vector pop_rural numeric vector poppct_rural numeric vector area_rural numeric vector areapct_rural numeric vector popden_rural numeric vector","code":""},{"path":"https://openintrostat.github.io/usdata/reference/urban_owner.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Summary of many state-level variables — urban_owner","text":"US Census.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/urban_owner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary of many state-level variables — urban_owner","text":"","code":"urban_owner #> # A tibble: 52 × 28 #>    state       total_housing_units_…¹ total_housing_units_…² pct_vacant occupied #>    <fct>       <fct>                  <fct>                       <dbl> <fct>    #>  1 Alabama     1,963,711              2,171,853                    13.3 1,883,7… #>  2 Alaska      260,978                306,967                      15.9 258,058  #>  3 Arizona     2,189,189              2,844,526                    16.3 2,380,9… #>  4 Arkansas    1,173,043              1,316,299                    12.9 1,147,0… #>  5 California  12,214,549             13,680,081                    8.1 12,577,… #>  6 Colorado    1,808,037              2,212,898                    10.8 1,972,8… #>  7 Connecticut 1,385,975              1,487,891                     7.9 1,371,0… #>  8 Delaware    343,072                405,885                      15.7 342,297  #>  9 District o… 274,845                296,719                      10.1 266,707  #> 10 Florida     7,302,947              8,989,580                    17.5 7,420,8… #> # ℹ 42 more rows #> # ℹ abbreviated names: ¹​total_housing_units_2000, ²​total_housing_units_2010 #> # ℹ 23 more variables: pct_owner_occupied <dbl>, pop_st <int>, area_st <dbl>, #> #   pop_urban <int>, poppct_urban <dbl>, area_urban <dbl>, areapct_urban <dbl>, #> #   popden_urban <dbl>, pop_ua <int>, poppct_urban_1 <dbl>, area_ua <dbl>, #> #   areapct_ua <dbl>, popden_ua <dbl>, pop_uc <int>, poppct_uc <dbl>, #> #   area_uc <dbl>, areapct_uc <dbl>, popden_uc <dbl>, pop_rural <int>, …"},{"path":"https://openintrostat.github.io/usdata/reference/urban_rural_pop.html","id":null,"dir":"Reference","previous_headings":"","what":"State summary info — urban_rural_pop","title":"State summary info — urban_rural_pop","text":"Census info 50 US states plus DC.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/urban_rural_pop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"State summary info — urban_rural_pop","text":"","code":"urban_rural_pop"},{"path":"https://openintrostat.github.io/usdata/reference/urban_rural_pop.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"State summary info — urban_rural_pop","text":"data frame 51 observations following 5 variables. state US state. urban_in numeric vector urban_out numeric vector rural_farm numeric vector rural_nonfarm numeric vector","code":""},{"path":"https://openintrostat.github.io/usdata/reference/urban_rural_pop.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"State summary info — urban_rural_pop","text":"US census.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/urban_rural_pop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"State summary info — urban_rural_pop","text":"","code":"urban_rural_pop #> # A tibble: 51 × 5 #>    state                urban_in urban_out rural_farm rural_nonfarm #>    <fct>                   <int>     <int>      <int>         <int> #>  1 Alabama               1839901    597814      59349       1543523 #>  2 Alaska                 221745    149118       1160        178020 #>  3 Arizona               2656388    550687       6967        451186 #>  4 Arkansas               591609    666589      63589       1028938 #>  5 California           25465911   2105967     150535       2037608 #>  6 Colorado              2377886    337863      45118        533527 #>  7 Connecticut           2455622    145912       5250        680332 #>  8 Delaware               459494     27844       6486        172344 #>  9 District of Columbia   606900         0          0             0 #> 10 Florida              10181184    789261      47436       1920045 #> # ℹ 41 more rows"},{"path":"https://openintrostat.github.io/usdata/reference/us_crime_rates.html","id":null,"dir":"Reference","previous_headings":"","what":"US Crime Rates — us_crime_rates","title":"US Crime Rates — us_crime_rates","text":"National data number crimes committed US 1960 2019.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/us_crime_rates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"US Crime Rates — us_crime_rates","text":"","code":"us_crime_rates"},{"path":"https://openintrostat.github.io/usdata/reference/us_crime_rates.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"US Crime Rates — us_crime_rates","text":"data frame 60 rows 12 variables. year Year data collected. population Population United States year data collected. total Total number violent property crimes committed. violent Total number violent crimes committed. property Total number property crimes committed. murder Number murders committed. Counted violent total. forcible_rape Number forcible rapes committed. Counted violent total. robbery Number robberies committed. Counted violent total. aggravated_assault Number aggravated assaults committed. Counted violent total. burglary Number burglaries committed. Counted property total. larceny_theft Number larcency thefts committed. Counted property total. vehicle_theft Number vehicle thefts committed. Counted property total.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/us_crime_rates.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"US Crime Rates — us_crime_rates","text":"Disaster Center","code":""},{"path":"https://openintrostat.github.io/usdata/reference/us_crime_rates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"US Crime Rates — us_crime_rates","text":"","code":"library(ggplot2)  ggplot(us_crime_rates, aes(x = population, y = total)) +   geom_point() +   labs(     title = \"Crimes V Population\",     x = \"Population\",     y = \"Total Number of Crimes\"   )   ggplot(us_crime_rates, aes(x = murder)) +   geom_boxplot() +   labs(     title = \"US Murders\",     subtitle = \"1960 - 2019\",     x = \"Number of Murders\"   ) +   theme(axis.text.y = element_blank())"},{"path":"https://openintrostat.github.io/usdata/reference/us_temp.html","id":null,"dir":"Reference","previous_headings":"","what":"US Temperature Data — us_temp","title":"US Temperature Data — us_temp","text":"representative set monitoring locations taken NOAA data years interest (1950 2022).  information collected spread measurements across continental United States.  Daily high low temperatures given 24 weather stations.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/us_temp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"US Temperature Data — us_temp","text":"","code":"us_temp"},{"path":"https://openintrostat.github.io/usdata/reference/us_temp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"US Temperature Data — us_temp","text":"data frame 17250 observations following 9 variables. station Station ID, measurements 24 stations. name Name station. latitude Latitude station. longitude Longitude station. elevation Elevation station. date Date observed temperature. tmax High temp observed day. tmin Low temp observed day. year Factor variable year, levels: 1950 2022.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/us_temp.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"US Temperature Data — us_temp","text":"https://www.ncei.noaa.gov/cdo-web/, retrieved 2023-09-23.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/us_temp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"US Temperature Data — us_temp","text":"Please keep mind two annual snapshots dozen arbitrarily selected weather stations.  complete analysis consider two years data precise random sample uniformly distributed across United States.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/us_temp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"US Temperature Data — us_temp","text":"","code":"library(ggplot2) library(maps) library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE library(dplyr)  # Summarize temperature by station and year for plotting summarized_temp <- us_temp |>   group_by(station, year, latitude, longitude) |>   summarize(tmax_med = median(tmax, na.rm = TRUE), .groups = \"drop\") |>   mutate(plot_shift = ifelse(year == \"1950\", 0, 2))  # Make a map of the US as a baseline usa <- st_as_sf(maps::map(\"state\", fill = TRUE, plot = FALSE))  # Layer the US map with summarized temperatures ggplot(data = usa) +   geom_sf() +   geom_point(     data = summarized_temp,     aes(x = longitude + plot_shift, y = latitude, fill = tmax_med, shape = year),     color = \"black\", size = 3   ) +   scale_fill_gradient(high = \"red\", low = \"yellow\") +   scale_shape_manual(values = c(21, 24)) +   labs(     title = \"Median high temperature, 1950 and 2022\",     x = \"Longitude\",     y = \"Latitude\",     fill = \"Median\\nhigh temp\",     shape = \"Year\"   )"},{"path":"https://openintrostat.github.io/usdata/reference/us_time_survey.html","id":null,"dir":"Reference","previous_headings":"","what":"American Time Survey 2009 - 2019 — us_time_survey","title":"American Time Survey 2009 - 2019 — us_time_survey","text":"Average Time Spent Activities Americans","code":""},{"path":"https://openintrostat.github.io/usdata/reference/us_time_survey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"American Time Survey 2009 - 2019 — us_time_survey","text":"","code":"us_time_survey"},{"path":"https://openintrostat.github.io/usdata/reference/us_time_survey.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"American Time Survey 2009 - 2019 — us_time_survey","text":"data frame 11 rows 8 variables. year Year data collected household_activities Average hours per day spent household activities - travel included eating_and_drinking Average hours per day spent eating drinking including travel. leisure_and_sports Average hours per day spent leisure sports - including travel. sleeping Average Hours spent sleeping. caring_children Average hours spent per day caring helping children 18 years age. working_employed Average hours spent working employed. (15 years older) working_employed_days_worked Average hours per day spent working days worked (15 years older)","code":""},{"path":"https://openintrostat.github.io/usdata/reference/us_time_survey.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"American Time Survey 2009 - 2019 — us_time_survey","text":"US Bureau Labor Statistics","code":""},{"path":"https://openintrostat.github.io/usdata/reference/us_time_survey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"American Time Survey 2009 - 2019 — us_time_survey","text":"","code":"library(ggplot2) us_time_survey$year <- as.factor(us_time_survey$year) ggplot(us_time_survey, aes(year, sleeping)) +   geom_point(alpha = 0.3) +   labs(     x = \"Year\",     y = \"Average hours spent Sleeping\",     title = \"US Average hours spent sleeping, 2009 - 2019\"   )"},{"path":"https://openintrostat.github.io/usdata/reference/usdata-package.html","id":null,"dir":"Reference","previous_headings":"","what":"usdata: Data on the States and Counties of the United States — usdata-package","title":"usdata: Data on the States and Counties of the United States — usdata-package","text":"Demographic data United States county state levels spanning multiple years.","code":""},{"path":[]},{"path":"https://openintrostat.github.io/usdata/reference/usdata-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"usdata: Data on the States and Counties of the United States — usdata-package","text":"Maintainer: Mine Çetinkaya-Rundel cetinkaya.mine@gmail.com (ORCID) Authors: David Diez david@openintro.org Leah Dorazio leah.dorazio@sfuhs.org","code":""},{"path":"https://openintrostat.github.io/usdata/reference/vote_nsa.html","id":null,"dir":"Reference","previous_headings":"","what":"Predicting who would vote for NSA Mass Surveillance — vote_nsa","title":"Predicting who would vote for NSA Mass Surveillance — vote_nsa","text":"2013, House Representatives voted stop National Security Agency's (NSA's) mass surveillance phone behaviors. look two predictors representative voted: party much money received private defense industry.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/vote_nsa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predicting who would vote for NSA Mass Surveillance — vote_nsa","text":"","code":"vote_nsa"},{"path":"https://openintrostat.github.io/usdata/reference/vote_nsa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Predicting who would vote for NSA Mass Surveillance — vote_nsa","text":"data frame 434 observations following 5 variables. name Name Congressional representative. party party representative: D Democrat R Republican. state State representative. money Money received defense industry campaigns. phone_spy_vote Voting rein phone dragnet continue allowing mass surveillance.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/vote_nsa.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Predicting who would vote for NSA Mass Surveillance — vote_nsa","text":"MapLight. Available http://s3.documentcloud.org/documents/741074/amash-amendment-vote-maplight.pdf.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/vote_nsa.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Predicting who would vote for NSA Mass Surveillance — vote_nsa","text":"Kravets, D., 2020. Lawmakers Upheld NSA Phone Spying Received Double Defense Industry Cash. WIRED. Available https://www.wired.com/2013/07/money-nsa-vote/.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/vote_nsa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predicting who would vote for NSA Mass Surveillance — vote_nsa","text":"","code":"table(vote_nsa$party, vote_nsa$phone_spy_vote) #>     #>     continue_allowing_mass_surveillance rein_in_phone_dragnet #>   D                                  83                   111 #>   R                                 134                    94 boxplot(vote_nsa$money / 1000 ~ vote_nsa$phone_spy_vote,   ylab = \"$1000s Received from Defense Industry\" )"},{"path":"https://openintrostat.github.io/usdata/reference/voter_count.html","id":null,"dir":"Reference","previous_headings":"","what":"US Voter Turnout Data. — voter_count","title":"US Voter Turnout Data. — voter_count","text":"State-level data federal elections held November 1980 2014.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/voter_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"US Voter Turnout Data. — voter_count","text":"","code":"voter_count"},{"path":"https://openintrostat.github.io/usdata/reference/voter_count.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"US Voter Turnout Data. — voter_count","text":"data frame 936 rows 7 variables. year Year election held. region Specifies data state national total. voting_eligible_population Number citizens eligible vote; count felons. total_ballots_counted Number ballots cast. highest_office Number ballots contained vote highest office election. percent_total_ballots_counted Overall voter turnout percentage. percent_highest_office Highest office voter turnout percentage.","code":""},{"path":"https://openintrostat.github.io/usdata/reference/voter_count.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"US Voter Turnout Data. — voter_count","text":"United States Election Project","code":""},{"path":"https://openintrostat.github.io/usdata/reference/voter_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"US Voter Turnout Data. — voter_count","text":"","code":"library(ggplot2)  ggplot(voter_count, aes(x = percent_highest_office, y = percent_total_ballots_counted)) +   geom_point() +   labs(     title = \"Total Ballots V Highest Office\",     x = \"Highest Office\",     y = \"Total Ballots\"   ) #> Warning: Removed 223 rows containing missing values or values outside the scale range #> (`geom_point()`)."},{"path":"https://openintrostat.github.io/usdata/news/index.html","id":"usdata-020","dir":"Changelog","previous_headings":"","what":"usdata 0.2.0","title":"usdata 0.2.0","text":"CRAN release: 2021-06-21 Extended county_complete new ACS 2019 data. Added county_2019 data set many ACS 2019 variables.","code":""},{"path":"https://openintrostat.github.io/usdata/news/index.html","id":"usdata-010","dir":"Changelog","previous_headings":"","what":"usdata 0.1.0","title":"usdata 0.1.0","text":"CRAN release: 2020-06-30 Added NEWS.md file track changes package. Added 10 datasets: county_complete, county, govrace10, houserace10, prrace08, senaterace10, state_stats, urban_owner, urban_rural_pop, vote_nsa, previously hosted openintro package. Added 2 functions: abbr2state, state2abbr, previously hosted openintro package.","code":""}]
